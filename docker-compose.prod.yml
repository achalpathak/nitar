version: "3.8"

services:
  backend:
    build: .
    container_name: django_container
    entrypoint: ["./run_server.sh"]
    env_file: .env.prod
    restart: always
    # volumes:
      # - ./logs/:/var/log
      # - ./static:/home/docker_user/application/static
      # - ./media:/home/docker_user/application/media
    volumes:
      - .:/home/docker_user/application
      - static-data:/home/docker_user/application/static
      - media-data:/home/docker_user/application/media
      - log-data:/home/docker_user/application/logs

  nginx:
    build:
        context: ./nginx
        dockerfile: Dockerfile
    container_name: nginx_container
    command: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - static-data:/home/docker_user/application/static
      - media-data:/home/docker_user/application/media
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend

  # certbot:
  #   image: certbot/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
  #   # volumes:
  #   #   - ./data/certbot/conf:/etc/letsencrypt
  #   #   - ./data/certbot/www:/var/www/certbot

  mysqldb:
    image: mysql:8.0
    container_name: mysql_container
    volumes:
      - db-data:/var/lib/mysql
    restart: unless-stopped
    env_file: .env.prod
    ports:
      - "3306:3306"
    depends_on:
      - backend
volumes:
  db-data:
      driver: local
  static-data:
      driver: local
  media-data:
      driver: local
  log-data:
      driver: local